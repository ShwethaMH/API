import boto3
from typing import Any, Dict, Optional

class KendraAPIWrapper:
    """Wrapper around Amazon Kendra API using boto3."""

    def __init__(self, aws_access_key_id: Optional[str] = None, aws_secret_access_key: Optional[str] = None, region_name: Optional[str] = None, kendra_index_id: Optional[str] = None):
        self.aws_access_key_id = aws_access_key_id
        self.aws_secret_access_key = aws_secret_access_key
        self.region_name = region_name or "us-west-2"
        self.kendra_index_id = kendra_index_id

        self.client = boto3.client(
            "kendra",
            aws_access_key_id=self.aws_access_key_id,
            aws_secret_access_key=self.aws_secret_access_key,
            region_name=self.region_name,
        )

    def run_query(self, query: str) -> str:
        """Run query through Amazon Kendra API and parse the result."""
        if not self.kendra_index_id:
            raise ValueError("Kendra index ID is required")

        response = self.client.query(
            QueryText=query,
            IndexId=self.kendra_index_id,
        )

        return self._process_response(response)

    @staticmethod
    def _process_response(response: Dict[str, Any]) -> str:
        """Process response from Amazon Kendra API."""
        if "ResultItems" not in response or len(response["ResultItems"]) == 0:
            return "No good search result found"

        result_item = response["ResultItems"][0]

        if "DocumentExcerpt" in result_item:
            return result_item["DocumentExcerpt"]["Text"]

        return "No good search result found"

